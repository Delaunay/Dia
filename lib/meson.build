stdprop_sources = [
    'properties.h',
    'properties.c',
    'propinternals.h',
    'propdesc.c',
    'proplist.c',
    'propoffsets.c',
    'propobject.c',
    'prop_basic.c',
    'prop_basic.h',
    'prop_dict.c',
    'prop_dict.h',
    'prop_matrix.c',
    'prop_matrix.h',
    'prop_pattern.c',
    'prop_pattern.h',
    'prop_pixbuf.c',
    'prop_pixbuf.h',
    'prop_inttypes.c',
    'prop_inttypes.h',
    'prop_geomtypes.c',
    'prop_geomtypes.h',
    'prop_attr.c',
    'prop_attr.h',
    'prop_text.c',
    'prop_text.h',
    'prop_widgets.c',
    'prop_widgets.h',
    'prop_sdarray.c',
    'prop_sdarray.h',
    'prop_sdarray_widget.c',
    'prop_sdarray_widget.h',
    'propdialogs.c',
    'propregistry.c'
]

libdia_sources = stdprop_sources + [
    'diatypes.h',
    'diavar.h',
    'diamenu.h',
    'diagramdata.h',
    'diagramdata.c',
    'layer.c',
    'geometry.h',
    'geometry.c',
    'color.h',
    'color.c',
    'dia_xml.c',
    'dia_xml.h',
    'dia_xml_libxml.h',
    'attributes.h',
    'attributes.c',
    'text.c',
    'text.h',
    'textline.c',
    'textline.h',
    'font.c',
    'font.h',
    'group.c',
    'group.h',
    'utils.c',
    'utils.h',
    'arrows.c',
    'arrows.h',
    'message.c',
    'message.h',
    'focus.c',
    'focus.h',
    'sheet.c',
    'sheet.h',
    'connectionpoint.c',
    'connectionpoint.h',
    'handle.h',
    'object.h',
    'object.c',
    'object-alias.h',
    'object-alias.c',
    'object_defaults.c',
    'connection.c',
    'connection.h',
    'orth_conn.c',
    'orth_conn.h',
    'poly_conn.c',
    'poly_conn.h',
    'bezier_conn.c',
    'bezier_conn.h',
    'bezier-common.c',
    'bezier-common.h',
    'connection.h',
    'element.c',
    'element.h',
    'polyshape.c',
    'polyshape.h',
    'beziershape.c',
    'beziershape.h',
    'objchange.c',
    'objchange.h',
    'dialogs.c',
    'dialogs.h',
    'widgets.c',
    'widgets.h',
    'diaoptionmenu.c',
    'diaoptionmenu.h',
    'units.c',
    'units.h',
    'dia_image.c',
    'dia_image.h',
    'pattern.c',
    'pattern.h',
    'standard-path.c',
    'standard-path.h',
    'intl.c',
    'intl.h',
    'filter.c',
    'filter.h',
    'connpoint_line.c',
    'connpoint_line.h',
    'textattr.h',
    'dia_dirs.c',
    'dia_dirs.h',
    'plug-ins.c',
    'plug-ins.h',
    'dummy_dep.h',
    'paper.c',
    'paper.h',
    'boundingbox.c',
    'boundingbox.h',
    'dynamic_obj.c',
    'dynamic_obj.h',
    'create.c',
    'create.h',
    'dia-enums.h',
    'diatransform.h',
    'diatransform.c',
    'diarenderer.h',
    'diarenderer.c',
    'diaimportrenderer.c',
    'diaimportrenderer.h',
    'diainteractiverenderer.c',
    'diagdkrenderer.h',
    'diagdkrenderer.c',
    'diapathrenderer.h',
    'diapathrenderer.c',
    'path-math.h',
    'path-math.c',
    'diapatternselector.h',
    'diapatternselector.c',
    'diatransformrenderer.h',
    'diatransformrenderer.c',
    'diasvgrenderer.h',
    'diasvgrenderer.c',
    'dia_svg.h',
    'dia_svg.c',
    'autoroute.c',
    'autoroute.h',
    'parent.c',
    'parent.h',
    'render_pixmap.h',
    'render_pixmap.c',
    'diaarrowchooser.h',
    'diaarrowchooser.c',
    'diaarrowselector.c',
    'diacolorselector.c',
    'dialinestyleselector.c',
    'dialinechooser.h',
    'dialinechooser.c',
    'diadynamicmenu.h',
    'diadynamicmenu.c',
    'diafontselector.h',
    'diafontselector.c',
    'persistence.c',
    'persistence.h',
    'diaerror.c',
    'diaerror.h',
    'debug.c',
    'debug.h',
    'prefs.c',
    'prefs.h',
    'dialib.c',
    'dialib.h',
    'diacontext.c',
    'diacontext.h',
    'diacellrendererenum.c',
    'diacellrendererenum.h',
    'diacellrendererproperty.c',
    'diacellrendererproperty.h'
]

libm_dep = cc.find_library(
    'm', required : false)

libzlib_dep = dependency('zlib')


glib_genmarshal = find_program('glib-genmarshal')
diamarshal_c = custom_target(
    'diamarshal.c',
    input : 'diamarshal.list',
    output : 'diamarshal.c',
    command : [ glib_genmarshal,
                '--prefix=dia_marshal',
                '--include-header', 'diamarshal.h',
                '--output', '@OUTPUT@',
                '--body',
                '@INPUT@'])

diamarshal_h = custom_target(
    'diamarshal.h',
    input : 'diamarshal.list',
    output : 'diamarshal.h',
    command : [ glib_genmarshal,
                '--prefix=dia_marshal',
                '--output', '@OUTPUT@',
                '--header',
                '@INPUT@'])

# Generate csource for the icons.
#TODO: the left-hand names should be extracted from the filenames.
#      (something like 'dia_BASEFILENAME_icon')
icon_png_pairs = [ ['dia_broken_icon'        , files('pixmaps/broken.png')],
                   ['dia_broken_chain_icon'  , files('pixmaps/broken-chain.png')],
                   ['dia_unbroken_chain_icon', files('pixmaps/unbroken-chain.png')],
                   ['stdpath_icon'           , files('pixmaps/standard-path.png')] ]

icon_pngs = []
foreach name_source_pair : icon_png_pairs
    icon_pngs += name_source_pair[1]
endforeach

dia_lib_icons_h = custom_target(
    'dia-lib-icons.h',
    output : 'dia-lib-icons.h',
    capture : true,
    command : [ find_program('gdk-pixbuf-csource'),
                '--build-list',
                icon_png_pairs])

libdia_deps = [
    libgtk_dep,
    libglib_dep,
    libxml_dep,
    libm_dep,
    libzlib_dep,
    gmodule_dep
]

libdia = shared_library('dia',
    libdia_sources + [diamarshal_c, diamarshal_h, dia_lib_icons_h],
    dependencies : libdia_deps,
    include_directories : configuration_inc,
    c_args : ['-Wall'])
